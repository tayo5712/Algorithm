# 최소 신장 트리
# 크루스칼
def solution(n, costs):
    answer = 0
    edge = n - 1

    costs.sort(key = lambda x : x[2])
    now_edge = 0
      
    parent = [i for i in range(n + 1)]
    
    def find_set(x):
        if parent[x] != x:
            parent[x] = find_set(parent[x])
        return parent[x]

    def union(x, y):
        parent[find_set(y)] = find_set(x)
    
    for cost in costs:
        if find_set(cost[0]) != find_set(cost[1]):
            answer += cost[2]
            now_edge += 1
            union(cost[0], cost[1])
            if edge == now_edge:
                break

    return answer
