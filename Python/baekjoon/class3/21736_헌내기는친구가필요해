from collections import deque

def bfs(sti, stj):
  global people
  visited = [[0 for _ in range(m)] for _ in range(n)]
  q = deque([(sti, stj)])
  visited[sti][stj] = 1
  while q:
    now_i, now_j = q.popleft()
    for di, dj in ((0, 1), (1, 0), (-1, 0), (0, -1)):
      next_i, next_j = now_i + di, now_j + dj
      if 0 <= next_i < n and 0 <= next_j < m and not visited[next_i][next_j] and mapp[next_i][next_j] != 'X':
        visited[next_i][next_j] = 1
        q.append((next_i, next_j))
        if mapp[next_i][next_j] == 'P':
          people += 1

n, m = map(int, input().split())
mapp = list(list(input()) for _ in range(n)) 
people = 0

for i in range(n):
  for j in range(m):
    if mapp[i][j] == 'I':
      bfs(i, j)

print(people) if people else print("TT")
