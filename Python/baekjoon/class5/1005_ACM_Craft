from collections import deque

tc = int(input())
for _ in range(tc):
  building_n, rule_n = map(int, input().split())
  building_time = list(map(int, input().split()))
  
  degree = [0 for _ in range(building_n + 1)] # 차수
  graph = [[] for _ in range(building_n + 1)] # 건물 순서
  dp = [0 for _ in range(building_n + 1)] # 최소값 찾는 dp
  
  # 건물 순서
  for _ in range(rule_n):
    a, b = map(int, input().split())
    graph[a].append(b)
    degree[b] += 1

  goal = int(input())
  
  # 차수 0 인 놈 찾기
  q = deque()
  for i in range(1, building_n + 1):
    if degree[i] == 0:
      q.append(i)
      dp[i] = building_time[i - 1]
  
  while q:
    tmp = q.popleft()
    for next in graph[tmp]:
      dp[next] = max(dp[next], dp[tmp])
      degree[next] -= 1
      if degree[next] == 0:
        dp[next] += building_time[next - 1]
        q.append(next)
  
  print(dp[goal])
